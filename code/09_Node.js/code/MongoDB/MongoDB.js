/**
 * Mongodb是一个基于分布式文件存储的数据库, 按照数据结构来组织存储和管理数据的应用程序
 * 主要作用是管理数据, 对数据进行增删改查
 * 相比纯文件管理数据, 数据库管理数据:
 *   1. 速度更快
 *   2. 扩展性更强
 *   3. 安全性更强
 * MongoDB操作语法与JS类似, 容易上手, 学习成本低
 * */
/**
 * 核心概念
 *   1. 数据库: 数据库是一个数据仓库, 数据库服务下可以创建很多数据库, 数据库中可以存放很多集合
 *   2. 集合: 集合类似于JS中的数据, 集合中可以存放很多文档
 *   3. 文档: 文档是数据库中的最小单位, 类似JS中的对象
 * 一个JSON文件好比是一个数据库, 一个MongoDB服务下可以有N个数据库
 * JSON文件中的一级属性的数组值好比集合
 * 数组中的对象好比是文档
 * 对象中的属性有时也称之为字段
 * 一般情况下:
 *   一个项目使用一个数据库
 *   一个集合会存储同一种类型的数据库
 * */
/**
 * 下载安装和启动
 *   官网下载zip类型, 通用性更强
 *   1. 压缩包移动到c:\Program Files下解压
 *   2. 创建c:\data\db目录 MongoDB会将数据默认保存在这个文件夹
 *   3. 以mongodb中bin目录为工作目录, 启动命令行
 *   4. 运行命令mongod
 *
 *   注意:
 *     1. 为了方便以后使用MongoDB命令, 可以将bin目录配置到环境变量Path中
 *     2. 不要选中服务端cmd窗口的内容, 选中时会停止服务, 此时按一下回车可以取消选中
 * */

/**
 * 命令行交互, 一般是学习数据库的第一步, 不过后续使用较少, 了解即可
 * 一. 数据库命令:
 *   1. 显示所有的数据库
 *     show dbs
 *   2. 切换到指定的数据库, 如果数据库不存在会自动创建数据库
 *     use 数据库名
 *   3. 显示当前所在数据库
 *     db
 *   4. 删除当前数据库
 *     use 库名
 *     db.dropDatabase()
 * 二. 集合命令:
 *   1. 创建集合
 *     db.createCollection('集合名称')
 *   2. 显示当前数据库中的所有集合
 *     show collections
 *   3. 删除某个集合
 *     db.集合名.drop()
 *   4. 重命名集合
 *     db.集合名.renameCollection('新名字')
 * 三. 文档命令 crud(增删改查)
 *   1. 插入文档
 *     db.集合名.insert(文档对象)
 *   2. 查询文档
 *     db.集合名.find(查询条件)
 *   3. 更新文档
 *     db.集合名.update(查询条件, 新的文档)
 *     db.集合名.update({name:'张三'},{age:19})  直接全部重写
 *     db.集合名.update({name:'张三'},{$set:{age:19}})  局部更新
 *   4. 删除文档
 *     db.集合名.remove(查询条件)
 * */
